<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Orders Table</title>
    <style>
        /* Add your CSS styles here */
        table, th, td {
            border: 1px solid black;
            border-collapse: collapse;
        }
    </style>
</head>
<body>
    <h1>Order Details</h1>
    <button onclick="fetchData()">Refresh Data</button>
    
    <h2>This Weeks Orders</h2>
    <table id="thisWeeksOrdersTable">
        <thead>
            <tr>
                <th>Order ID</th>
                <th>First Name</th>
                <th>Status</th>
                <th>Order Type</th>
                <th>Event DateTime</th>
                <th>Theme</th>
                <th>Flavor</th>
                <th>Allergies</th>
            </tr>
        </thead>
        <tbody>
            <!-- Data for new orders will be inserted here -->
        </tbody>
    </table>
    
    <h2>Future Orders</h2>
    <table id="futureOrdersTable">
        <thead>
            <tr>
                <th>Order ID</th>
                <th>First Name</th>
                <th>Status</th>
                <th>Order Type</th>
                <th>Event DateTime</th>
            </tr>
        </thead>
        <tbody>
            <!-- Data will be inserted here by JavaScript -->
        </tbody>
    </table>

    <script>
        async function fetchData() {
            const urls = {
                thisWeeksOrdersUrl: '{{ .ApiHostName }}/{{ .EnvName }}/get_this_weeks_paid_orders',
                futureOrdersUrl: '{{ .ApiHostName }}/{{ .EnvName }}/get_future_orders_event_datetime'
            };
    
            try {
                // Fetch data from the first API
                const responseThisWeek = await fetch(urls.thisWeeksOrdersUrl);
                const thisWeeksOrders = await responseThisWeek.json();
                updateThisWeeksOrders(thisWeeksOrders);
    
                // Only after the first API succeeds, fetch data from the second API
                const responseFutureOrders = await fetch(urls.futureOrdersUrl);
                const futureOrders = await responseFutureOrders.json();
                updateFutureOrdersTable(futureOrders);
    
            } catch (error) {
                console.error('Error fetching data:', error);
            }
        }
    
        function updateThisWeeksOrders(orders) {
            const table = document.getElementById('thisWeeksOrdersTable').getElementsByTagName('tbody')[0];
            table.innerHTML = "";
            orders.forEach(order => {
                let row = table.insertRow();
                row.insertCell(0).textContent = order.order_id;
                row.insertCell(1).textContent = order.first_name;
                row.insertCell(2).textContent = order.status;
                row.insertCell(3).textContent = order.order_type;
                row.insertCell(4).textContent = order.pickup_datetime;
                row.insertCell(5).textContent = order.theme;
                row.insertCell(6).textContent = order.flavor;
                row.insertCell(7).textContent = order.allergies;
            });
        }
    
        function updateFutureOrdersTable(orders) {
            const table = document.getElementById('futureOrdersTable').getElementsByTagName('tbody')[0];
            table.innerHTML = "";
            orders.forEach(order => {
                let row = table.insertRow();
                row.insertCell(0).textContent = order.order_id;
                row.insertCell(1).textContent = order.first_name;
                row.insertCell(2).textContent = order.status;
                row.insertCell(3).textContent = order.order_type;
                row.insertCell(4).textContent = order.pickup_datetime;
            });
        }
    </script>    
</body>
</html>
